name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-southeast-2                      # set this to your preferred AWS region
  ECR_REPOSITORY: spicecraft-repo            # set this to your Amazon ECR repository name
  ECS_SERVICE: spicecraft-service            # set this to your Amazon ECS service name
  ECS_CLUSTER: spicecraft-cluster            # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: ../../ecs-task-definition.json # set this to the path to your Amazon ECS task definition file
  CONTAINER_NAME: spicecraft-container       # set this to the name of the container in the containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Angular image to Amazon ECR
      id: build-angular-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-client-$IMAGE_TAG ../../spicecraft.client
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-client-$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-client-$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push .NET Core image to Amazon ECR
      id: build-dotnet-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-server-$IMAGE_TAG ../../SpiceCraft.Server
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-server-$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:spicecraft-server-$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new Angular image ID in the Amazon ECS task definition
      id: task-def-angular
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: spicecraft-client-container
        image: ${{ steps.build-angular-image.outputs.image }}

    - name: Fill in the new .NET Core image ID in the Amazon ECS task definition
      id: task-def-dotnet
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: spicecraft-server-container
        image: ${{ steps.build-dotnet-image.outputs.image }}

    - name: Deploy Angular task definition to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-angular.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Deploy .NET Core task definition to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-dotnet.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
