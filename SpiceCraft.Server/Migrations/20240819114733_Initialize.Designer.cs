// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpiceCraft.Server.Context;

#nullable disable

namespace SpiceCraft.Server.Migrations
{
    [DbContext(typeof(SpiceCraftContext))]
    [Migration("20240819114733_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.IndentityModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Black");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAtAdd")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("L");

                    b.HasKey("CartItemId")
                        .HasName("PK__CartItem__488B0B0A05C15EF9");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "CartId", "ItemId" }, "UQ__CartItem__F69B3F8E89576178")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CustomerGiftCard", b =>
                {
                    b.Property<int>("CustomerGiftCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerGiftCardId"));

                    b.Property<int>("GiftCardId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerGiftCardId")
                        .HasName("PK__Customer__F382824D51FDDC6D");

                    b.HasIndex("GiftCardId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerGiftCard", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CustomerReward", b =>
                {
                    b.Property<int>("CustomerRewardsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerRewardsId"));

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("RewardId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerRewardsId")
                        .HasName("PK__Customer__2E79ECCE5DBB3D41");

                    b.HasIndex("RewardId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerRewards");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Enquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnquiryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EnquiryTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("EnquiryId")
                        .HasName("PK__Enquiry__0A019B7D74A35F26");

                    b.HasIndex("EnquiryTypeId");

                    b.ToTable("Enquiry", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.EnquiryType", b =>
                {
                    b.Property<int>("EnquiryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnquiryTypeId"));

                    b.Property<string>("EnquiryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("EnquiryTypeId")
                        .HasName("PK__EnquiryT__BE8CFEFCCB11B2DA");

                    b.ToTable("EnquiryType", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.GiftCard", b =>
                {
                    b.Property<int>("GiftCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftCardId"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("GiftCardId")
                        .HasName("PK__GiftCard__9FBB0CC1426F7A2A");

                    b.HasIndex(new[] { "Code" }, "UQ__GiftCard__A25C5AA793AEB417")
                        .IsUnique();

                    b.ToTable("GiftCards");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CurrentStock")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LowStockThreshold")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("InventoryId")
                        .HasName("PK__Inventor__F5FDE6B37F73611C");

                    b.HasIndex(new[] { "ItemId" }, "UQ__Inventor__727E838AAD16E96B")
                        .IsUnique();

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<bool?>("Paid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAB5AA06587D");

                    b.HasIndex(new[] { "OrderId" }, "UQ__Invoices__C3905BCE9A7F914C")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ItemCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("PK__ItemCate__19093A0B42C61DF2");

                    b.HasIndex("ParentCategoryId");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__ItemCate__8517B2E09135E49F")
                        .IsUnique();

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ItemImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("ImageIndex")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool?>("IsMain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("ImageId")
                        .HasName("PK__ItemImag__7516F70C746EBBCD");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "ImageCode" }, "UQ__ItemImag__A7875E72032A32A7")
                        .IsUnique();

                    b.ToTable("ItemImages");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EnquiryId")
                        .HasColumnType("int");

                    b.Property<string>("MessageContent")
                        .HasColumnType("text");

                    b.Property<int?>("ReceiverUserId")
                        .HasColumnType("int");

                    b.Property<int>("SenderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__C87C0C9C534E83A4");

                    b.HasIndex("EnquiryId");

                    b.HasIndex("ReceiverUserId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasDefaultValue("");

                    b.Property<string>("NotificationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E127CD16CA4");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsFreeShipping")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ShippingOptionId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCFF5D1979B");

                    b.HasIndex("ShippingOptionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "OrderDate", "UserId" }, "UQ__Orders__A7F88E8F815996DE")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailsId"));

                    b.Property<decimal?>("ActualPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Color")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Black");

                    b.Property<decimal?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("L");

                    b.HasKey("OrderDetailsId")
                        .HasName("PK__OrderDet__9DD74DBD90D8AE45");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "OrderId", "ItemId" }, "UQ__OrderDet__64B7B3F6C6EDA6E9")
                        .IsUnique();

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Payment", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("credit card");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId")
                        .HasName("PK__Payments__55433A6B62192BAA");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Product", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<bool?>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool?>("OwnProduct")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ItemId")
                        .HasName("PK__Products__727E838B78FDB901");

                    b.HasIndex(new[] { "CategoryId", "ItemName" }, "UQ__Products__6DED0D35CA70609C")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionBulkItem", b =>
                {
                    b.Property<int>("PromotionBulkItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionBulkItemId"));

                    b.Property<decimal?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredQuantity")
                        .HasColumnType("int");

                    b.HasKey("PromotionBulkItemId")
                        .HasName("PK__Promotio__430AF235885C3231");

                    b.HasIndex(new[] { "ItemId" }, "UQ__Promotio__727E838A4403ACC9")
                        .IsUnique();

                    b.ToTable("PromotionBulkItems");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionCategory", b =>
                {
                    b.Property<int>("PromotionCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.HasKey("PromotionCategoryId")
                        .HasName("PK__Promotio__0D44A8A9B968679C");

                    b.HasIndex(new[] { "CategoryId" }, "UQ__Promotio__19093A0A43511817")
                        .IsUnique();

                    b.ToTable("PromotionCategories");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionComboItem", b =>
                {
                    b.Property<int>("PromotionComboItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionComboItemsId"));

                    b.Property<int>("BuyQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("ComboName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("GetQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("PromotionComboItemsId")
                        .HasName("PK__Promotio__DD97A31EF90EB47D");

                    b.HasIndex(new[] { "ItemId" }, "UQ__Promotio__727E838A084B98E7")
                        .IsUnique();

                    b.ToTable("PromotionComboItems");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionItem", b =>
                {
                    b.Property<int>("PromotionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionItemId"));

                    b.Property<decimal?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("PromotionItemId")
                        .HasName("PK__Promotio__2B1778CC51548A45");

                    b.HasIndex(new[] { "ItemId" }, "UQ__Promotio__727E838A9C07C5D2")
                        .IsUnique();

                    b.ToTable("PromotionItems");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"));

                    b.Property<int>("PointsThreshold")
                        .HasColumnType("int");

                    b.Property<string>("RewardDescription")
                        .HasColumnType("text");

                    b.HasKey("RewardId")
                        .HasName("PK__Rewards__825015B99B775E0C");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AC67D7E38");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61603BC61A90")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ShippingOption", b =>
                {
                    b.Property<int>("ShippingOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingOptionId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShippingOptionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ShippingOptionId")
                        .HasName("PK__Shipping__642EC60DF020D9B2");

                    b.HasIndex(new[] { "ShippingOptionName" }, "UQ__Shipping__6AB401BAC296BC26")
                        .IsUnique();

                    b.ToTable("ShippingOptions");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsOrdered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId")
                        .HasName("PK__Shopping__51BCD7B7E081C829");

                    b.HasIndex(new[] { "UserId" }, "UQ__Shopping__1788CC4DEC80A371")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ProfileImg")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C6DCB8AE8");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053476A57CB2")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.UserAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("shipping");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StateOrProvince")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StreetAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StreetAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AddressId")
                        .HasName("PK__UserAddr__091C2AFB46160253");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.UsersCredential", b =>
                {
                    b.Property<int>("UserCredentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserCredentialId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasDefaultValue("scrypt:32768:8:1$7VfJfm$00cf53e4d541c768689a76261af7a8be0adebdcdb6ecfee9e4d6918f2516ef477f42ecbde163079414d1d09041f8fb4198095e77afba9dd4d6a2a172b009ddd1");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserCredentialId")
                        .HasName("PK__UsersCre__17C49DA7E7586F62");

                    b.HasIndex(new[] { "UserId" }, "UQ__UsersCre__1788CC4DBC625324")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__UsersCre__536C85E43264F094")
                        .IsUnique();

                    b.ToTable("UsersCredential", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SpiceCraft.Server.IndentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SpiceCraft.Server.IndentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpiceCraft.Server.IndentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SpiceCraft.Server.IndentityModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CartItem", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.ShoppingCart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItems__CartI__76969D2E");

                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__CartItems__ItemI__778AC167");

                    b.Navigation("Cart");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CustomerGiftCard", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.GiftCard", "GiftCard")
                        .WithMany("CustomerGiftCards")
                        .HasForeignKey("GiftCardId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerG__GiftC__3D2915A8");

                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("CustomerGiftCards")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerG__UserI__3C34F16F");

                    b.Navigation("GiftCard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.CustomerReward", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Reward", "Reward")
                        .WithMany("CustomerRewards")
                        .HasForeignKey("RewardId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerR__Rewar__17036CC0");

                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("CustomerRewards")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerR__UserI__17F790F9");

                    b.Navigation("Reward");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Enquiry", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.EnquiryType", "EnquiryType")
                        .WithMany("Enquiries")
                        .HasForeignKey("EnquiryTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Enquiry__Enquiry__236943A5");

                    b.Navigation("EnquiryType");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Inventory", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithOne("Inventory")
                        .HasForeignKey("SpiceCraft.Server.Models.Inventory", "ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__ItemI__7D439ABD");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Invoice", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Order", "Order")
                        .WithOne("Invoice")
                        .HasForeignKey("SpiceCraft.Server.Models.Invoice", "OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__OrderI__1CBC4616");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ItemCategory", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.ItemCategory", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK__ItemCateg__Paren__4D94879B");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ItemImage", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithMany("ItemImages")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__ItemImage__ItemI__41EDCAC5");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Message", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Enquiry", "Enquiry")
                        .WithMany("Messages")
                        .HasForeignKey("EnquiryId")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__Enquir__2B0A656D");

                    b.HasOne("SpiceCraft.Server.Models.User", "ReceiverUser")
                        .WithMany("MessageReceiverUsers")
                        .HasForeignKey("ReceiverUserId")
                        .HasConstraintName("FK__Messages__Receiv__2A164134");

                    b.HasOne("SpiceCraft.Server.Models.User", "SenderUser")
                        .WithMany("MessageSenderUsers")
                        .HasForeignKey("SenderUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__Sender__29221CFB");

                    b.Navigation("Enquiry");

                    b.Navigation("ReceiverUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Notification", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__4E53A1AA");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Order", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.ShippingOption", "ShippingOption")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingOptionId")
                        .HasConstraintName("FK__Orders__Shipping__5EBF139D");

                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__UserId__5DCAEF64");

                    b.Navigation("ShippingOption");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.OrderDetail", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__ItemI__68487DD7");

                    b.HasOne("SpiceCraft.Server.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__6754599E");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Payment", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__OrderI__32AB8735");

                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__UserId__339FAB6E");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Product", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.ItemCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__5629CD9C");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionBulkItem", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithOne("PromotionBulkItem")
                        .HasForeignKey("SpiceCraft.Server.Models.PromotionBulkItem", "ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Promotion__ItemI__123EB7A3");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionCategory", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.ItemCategory", "Category")
                        .WithOne("PromotionCategory")
                        .HasForeignKey("SpiceCraft.Server.Models.PromotionCategory", "CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Promotion__Categ__06CD04F7");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionComboItem", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithOne("PromotionComboItem")
                        .HasForeignKey("SpiceCraft.Server.Models.PromotionComboItem", "ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Promotion__ItemI__0C85DE4D");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.PromotionItem", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Product", "Item")
                        .WithOne("PromotionItem")
                        .HasForeignKey("SpiceCraft.Server.Models.PromotionItem", "ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Promotion__ItemI__02084FDA");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ShoppingCart", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("SpiceCraft.Server.Models.ShoppingCart", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ShoppingC__UserI__6EF57B66");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.User", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__4222D4EF");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.UserAddress", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAddre__UserI__46B27FE2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.UsersCredential", b =>
                {
                    b.HasOne("SpiceCraft.Server.Models.User", "User")
                        .WithOne("UsersCredential")
                        .HasForeignKey("SpiceCraft.Server.Models.UsersCredential", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UsersCred__UserI__49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Enquiry", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.EnquiryType", b =>
                {
                    b.Navigation("Enquiries");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.GiftCard", b =>
                {
                    b.Navigation("CustomerGiftCards");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ItemCategory", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("Products");

                    b.Navigation("PromotionCategory");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Order", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Inventory");

                    b.Navigation("ItemImages");

                    b.Navigation("OrderDetails");

                    b.Navigation("PromotionBulkItem");

                    b.Navigation("PromotionComboItem");

                    b.Navigation("PromotionItem");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Reward", b =>
                {
                    b.Navigation("CustomerRewards");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ShippingOption", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("SpiceCraft.Server.Models.User", b =>
                {
                    b.Navigation("CustomerGiftCards");

                    b.Navigation("CustomerRewards");

                    b.Navigation("MessageReceiverUsers");

                    b.Navigation("MessageSenderUsers");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("ShoppingCart");

                    b.Navigation("UserAddresses");

                    b.Navigation("UsersCredential");
                });
#pragma warning restore 612, 618
        }
    }
}
